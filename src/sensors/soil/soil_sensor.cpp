#include "../../../include/soil_sensor.h"

void initSoil() {
  // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ pinMode ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö analogRead
  Serial.println("üå± ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏∑‡πâ‡∏ô‡πÉ‡∏ô‡∏î‡∏¥‡∏ô...");
}

StaticJsonDocument<256> readSoil() {
  StaticJsonDocument<256> doc;
  doc["name"] = SOIL_SENSOR;
  JsonArray values = doc.createNestedArray("value");

  int soilRaw = analogRead(SOIL_PIN);
  
  // ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ß‡∏±‡∏î‡∏à‡∏£‡∏¥‡∏á
  int DRY_ADC = 1023;  // ‡πÅ‡∏´‡πâ‡∏á‡∏™‡∏ô‡∏¥‡∏ó
  int WET_ADC = 950;   // ‡∏à‡∏∏‡πà‡∏°‡∏ô‡πâ‡∏≥‡πÄ‡∏ï‡πá‡∏°‡∏ó‡∏µ‡πà

  int soilMoisture = map(soilRaw, DRY_ADC, WET_ADC, 0, 100);
  if (soilMoisture < 0) soilMoisture = 0;
  if (soilMoisture > 100) soilMoisture = 100;

  JsonObject moistureValue = values.createNestedObject();
  moistureValue["type"] = "soil_moisture";
  moistureValue["unit"] = "%";
  moistureValue["value"] = soilMoisture;

  return doc;
}
