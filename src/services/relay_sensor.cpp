#include <Arduino.h>
#include "relay_sensor.h"

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏≠‡∏ö‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå RelaySensor
RelaySensor::RelaySensor() {
    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏û‡∏¥‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏µ‡πÄ‡∏•‡∏¢‡πå
    pinMode(RELAY_1_PIN, OUTPUT);
    pinMode(RELAY_2_PIN, OUTPUT);
    
    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏µ‡πÄ‡∏•‡∏¢‡πå‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ OFF (HIGH = OFF ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏°‡∏î‡∏π‡∏•‡∏£‡∏µ‡πÄ‡∏•‡∏¢‡πå‡∏™‡πà‡∏ß‡∏ô‡πÉ‡∏´‡∏ç‡πà)
    digitalWrite(RELAY_1_PIN, HIGH);
    digitalWrite(RELAY_2_PIN, HIGH);
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏£‡∏µ‡πÄ‡∏•‡∏¢‡πå
void RelaySensor::begin() {
    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
    Serial.println("üìå Relay Control Ready");
    Serial.println("‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö:");
    Serial.println("[control]:relay:on    - ‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏µ‡πÄ‡∏•‡∏¢‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î");
    Serial.println("[control]:relay:off   - ‡∏õ‡∏¥‡∏î‡∏£‡∏µ‡πÄ‡∏•‡∏¢‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î");
    Serial.println("[control]:status      - ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏µ‡πÄ‡∏•‡∏¢‡πå");
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏£‡∏µ‡πÄ‡∏•‡∏¢‡πå‡∏ß‡πà‡∏≤‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
bool RelaySensor::isValidRelayNumber(int relayNum) {
    return (relayNum == 1 || relayNum == 2);
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏û‡∏¥‡∏ô‡∏Ç‡∏≠‡∏á‡∏£‡∏µ‡πÄ‡∏•‡∏¢‡πå
int RelaySensor::getRelayPin(int relayNum) {
    return (relayNum == 1) ? RELAY_1_PIN : RELAY_2_PIN;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡∏£‡∏µ‡πÄ‡∏•‡∏¢‡πå
bool* RelaySensor::getRelayStatePtr(int relayNum) {
    return (relayNum == 1) ? &relay1State : &relay2State;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Serial
void RelaySensor::update() {
    while (Serial.available() > 0) {
        char c = Serial.read();
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏•‡∏á‡πÉ‡∏ô‡∏ö‡∏±‡∏ü‡πÄ‡∏ü‡∏≠‡∏£‡πå‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà newline
        if (c != '\n') {
            commandBuffer += c;
        } else {
            // ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö newline
            if (commandBuffer.length() > 0) {
                processCommand(commandBuffer);
                commandBuffer = "";  // ‡∏•‡πâ‡∏≤‡∏á‡∏ö‡∏±‡∏ü‡πÄ‡∏ü‡∏≠‡∏£‡πå
            }
        }
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á
void RelaySensor::processCommand(String command) {
    command.trim();  // ‡∏•‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á
    if (!command.startsWith(CMD_PREFIX)) {
        Serial.println("‚ùå ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á");
        return;
    }
    
    // ‡πÅ‡∏¢‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å prefix
    String cmd = command.substring(strlen(CMD_PREFIX));
    
    // ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á status
    if (cmd == CMD_STATUS) {
        sendStatus();
        return;
    }
    
    // ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏£‡∏µ‡πÄ‡∏•‡∏¢‡πå
    if (cmd.startsWith(CMD_RELAY)) {
        String relayCmd = cmd.substring(strlen(CMD_RELAY));
        
        if (relayCmd == CMD_ON) {
            // ‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏µ‡πÄ‡∏•‡∏¢‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
            toggleRelay(1, true);
            toggleRelay(2, true);
            Serial.println("Relay ON");
            return;
        }
        
        if (relayCmd == CMD_OFF) {
            // ‡∏õ‡∏¥‡∏î‡∏£‡∏µ‡πÄ‡∏•‡∏¢‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
            toggleRelay(1, false);
            toggleRelay(2, false);
            Serial.println("Relay OFF");
            return;
        }
    }
    
    // ‡∏Å‡∏£‡∏ì‡∏µ‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á
    Serial.println("‚ùå ‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á");
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏µ‡πÄ‡∏•‡∏¢‡πå
void RelaySensor::toggleRelay(int relayNum, bool turnOn) {
    int pin = getRelayPin(relayNum);
    bool* state = getRelayStatePtr(relayNum);
    
    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏µ‡πÄ‡∏•‡∏¢‡πå (LOW = ON ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏°‡∏î‡∏π‡∏•‡∏£‡∏µ‡πÄ‡∏•‡∏¢‡πå‡∏™‡πà‡∏ß‡∏ô‡πÉ‡∏´‡∏ç‡πà)
    digitalWrite(pin, turnOn ? LOW : HIGH);
    *state = turnOn;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏µ‡πÄ‡∏•‡∏¢‡πå
void RelaySensor::sendStatus() {
    Serial.println("üìä ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏µ‡πÄ‡∏•‡∏¢‡πå:");
    Serial.print("‡∏£‡∏µ‡πÄ‡∏•‡∏¢‡πå 1: ");
    Serial.println(relay1State ? "‡πÄ‡∏õ‡∏¥‡∏î" : "‡∏õ‡∏¥‡∏î");
    Serial.print("‡∏£‡∏µ‡πÄ‡∏•‡∏¢‡πå 2: ");
    Serial.println(relay2State ? "‡πÄ‡∏õ‡∏¥‡∏î" : "‡∏õ‡∏¥‡∏î");
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡∏£‡∏µ‡πÄ‡∏•‡∏¢‡πå‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏
bool RelaySensor::getRelayState(int relayNum) {
    if (!isValidRelayNumber(relayNum)) {
        return false;
    }
    return (relayNum == 1) ? relay1State : relay2State;
} 